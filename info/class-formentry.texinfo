@comment -*-texinfo-*-
@node class FormEntry, class FormFile, class CgiEnvironment, Top
@unnumbered class FormEntry

@code{FormEntry} is an immutable class representing a single user entry
in an HTML form element such as a text field, a radio button, or a
checkbox.  A @code{FormEntry} is essentially a name/value pair, where
the name is the name of the form element as specified in the HTML form
itself, and the value is the user-entered or user-selected value.

@unnumberedsec Constructors

@deftypemethod FormEntry void FormEntry ()
Default constructor - should not generally be used.
@end deftypemethod

@deftypemethod FormEntry void FormEntry (const string& @var{name}, const string& @var{value})
Constructor.  @var{name} is the name of the form element, and
@var{value} is the value of the form element.
@end deftypemethod

@deftypemethod FormEntry void FormEntry (const FormEntry& @var{entry})
Copy constructor. @var{entry} is the @code{FormEntry} to copy.
@end deftypemethod

@unnumberedsec Overloaded Operators

@deftypemethod FormEntry bool operator== (const FormEntry& @var{entry}) const
Equality operator.  Returns @code{true} if @var{entry} has the same name
and value as this @code{FormEntry}, @code{false} otherwise.
@end deftypemethod

@deftypemethod FormEntry bool operator!= (const FormEntry& @var{entry}) const
Inequality operator.  Returns @code{false} if @var{entry} has the same name
and value as this @code{FormEntry}, @code{true} otherwise.
@end deftypemethod

@deftypemethod FormEntry FormEntry& operator= (const FormEntry& @var{entry})
Assignment operator. Sets the name and value of this @code{FormEntry} to
those of @var{entry}.
@end deftypemethod

@deftypemethod FormEntry string operator* () const
Get the value of the form element.  The value may contain line breaks.
@end deftypemethod

@unnumberedsec Accessor Methods

@deftypemethod FormEntry string getName () const
Get the name of the form element.
@end deftypemethod

@deftypemethod FormEntry string getValue () const
Get the value of the form element.  The value may contain line breaks.
@end deftypemethod

@deftypemethod FormEntry string getValue (string::size_type @var{maxChars}) const
Get the value of the form element, truncated to at most @var{maxChars}
characters.
@end deftypemethod

@deftypemethod FormEntry string getStrippedValue () const
Get the value of the form element, stripped of any line breaks.
@end deftypemethod

@deftypemethod FormEntry string getStrippedValue (string::size_type @var{maxChars}) const
Get the value of the form element, stripped of any line breaks and
truncatd to @var{maxChars} characters.
@end deftypemethod

@deftypemethod FormEntry long getIntegerValue (long @var{min} = LONG_MIN, long @var{max} = LONG_MAX) const
Get the value of the form element as an integer.  The optional
parameters @var{min} and @var{max} specify the legal range of return
values.
@end deftypemethod

@deftypemethod FormEntry double getDoubleValue (double @var{min} = DBL_MIN, double @var{max} = DBL_MAX) const
Get the value of the form element as a double.  The optional
parameters @var{min} and @var{max} specify the legal range of return
values.
@end deftypemethod

@deftypemethod FormEntry string::size_type length () const
Get the number of characters in the value of this form element.
@end deftypemethod

@deftypemethod FormEntry bool isEmpty () const
Returns @code{true} if the form element is empty, that is, if
@code{length()} == 0.
@end deftypemethod

