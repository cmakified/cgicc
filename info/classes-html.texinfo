@comment -*-texinfo-*-
@node classes for HTML output, Reporting Bugs, classes for HTTP headers, Top
@unnumbered classes for HTML output

For an introduction to Cgicc's HTML output, please see @xref{A tutorial
example}, for more information.

Cgicc provides one concrete class for each HTML element defined in the
HTML 4.0 standard (@pxref{HTML generation classes}).  Every class
defining an HTML element is a subclass of the abstract base class
@code{HTMLElement}.  

There are a number of methods defined on @code{HTMLElement} which are,
by definition, defined for all subclasses.  In most instances, these
functions will not be used directly, but rather are invoked implicitly
by the subclasses.

@unnumberedsec HTMLElement

@deftypemethod HTMLElement {const char*} getName () const
Returns the name of the HTML element.  For example @samp{HTML} or
@samp{BODY}.
@end deftypemethod

@deftypemethod HTMLElement {const HTMLAttributeList*} getAttributes () const
Returns the @code{HTMLAttributeList} containing all the attributes
associated with this HTML element, if any.
@end deftypemethod

@deftypemethod HTMLElement void setAttributes (const HTMLAttributeList& @var{attributes})
Set the attributes associated with this HTML element.
@end deftypemethod

@deftypemethod HTMLElement {const HTMLElementList*} getEmbedded () const
Returns the @code{HTMLElementList} containing all the HTML elements
embedded in this one, if any.
@end deftypemethod

@deftypemethod HTMLElement void setEmbedded (const HTMLElementList& @var{embedded})
Set the HTML elements embedded in this HTML element.
@end deftypemethod


@unnumberedsec Setting HTML Attributes

For most real-world HTML, an @code{HTMLElement} will contain one or more
embedded HTML attributes.  HTML attributes are added to
@code{HTMLElement} objects via the @code{set} methods on
@code{HTMLElement}.

@deftypemethod HTMLElement HTMLElement& set(const string& @var{name})
Set an @code{HTMLAttribute} with name @var{name} on this HTML element.
@end deftypemethod

@deftypemethod HTMLElement HTMLElement& set(const string& @var{name}, const string& @var{value})
Set an @code{HTMLAttribute} with name @var{name} and value @var{value}
on this HTML element.
@end deftypemethod

@unnumberedsec Embedding HTML Elements

It is often desirable to embed multiple HTML elements in another at the
same level.  HTML elements are embedded in an @code{HTMLElement} via the
@code{add} method on @code{HTMLElement}.

@deftypemethod HTMLElement HTMLElement& add(const HTMLElement&@var{element})
Add @var{element} to the list of HTML elements embedded in this one.
@end deftypemethod

@unnumberedsec HTMLElement Construction

All subclasses of @code{HTMLElement} possess the same set of
constructors.  They are presented here once for all subclasses; in the
documentation below, the arbitrary element @samp{H1}, represented by the
class @code{h1}, was chosen.

@deftypemethod h1 void h1 ()
Default constructor.  Creates an empty HTML element.
@end deftypemethod

@deftypemethod h1 void h1 (const string& @var{text})
Creates a new HTML element containing the text @var{text}.
@end deftypemethod

@deftypemethod h1 void h1 (const HTMLElement& @var{embed})
Creates a new HTML element containing the embedded HTML element
@var{embed}.
@end deftypemethod
