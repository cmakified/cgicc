<!-- $Id: building.dxx,v 1.1 1998/04/01 20:53:09 sbooth Exp $ -->

/**@name Building the Cgicc library

<P>
Once your source distribution is unpacked, a few customizations are
necessary in order to compile the library.  Using your text editor
of choice, open the file <TT>Makefile</TT> in the Cgicc directory.
Scroll down through <TT>Makefile</TT> until you see the following lines:
</P>

<PRE CLASS="file">
## The macro CGIDIR should contain the path to the directory where you
##  would like the compiled executable to be saved.  This will usually
##  be $(HOME)/public_html/cgi-bin.  
##  If $(HOME) is not defined, be sure and supply the ABSOLUTE path.

## The macro ADMINNAME should contain the e-mail address of the person
##  responsible for maintaining Cgicc.

CGIDIR=         $(HOME)/public_html/cgi-bin
ADMINNAME=      \"cgicc@foo.com\"

## If you are using a compiler other than GNU's C++ compiler (g++),
##  change the following line
CC=             g++

## If your system does not support uname, set the following to 0
HASUNAME=       -DHAS_UNAME=1

## If you want to enable debug logging, set the following to 1
DEBUG=          -DDEBUG=0
</PRE>

<P>
It should be fairly straightforward to customize these options.

<OL>

<LI>
<STRONG>CGIDIR</STRONG> contains the path to your cgi-bin directory.  
Depending on the configuration of your system, this may or may not be correct.
<BR>
<STRONG>In order for the preset path to be correct, your HOME environment 
variable must be set.
</STRONG>
</LI>

<LI>
<STRONG>ADMINNAME</STRONG> contains the e-mail address of the person
reponsible for maintaining Cgicc.  This address will appear on all error
pages generated by Cgicc.
</LI>

<LI>
<STRONG>CC</STRONG> is the name of your compiler executable.  If your
compiler is not named g++, this must be changed to reflect the name of 
your compiler.
</LI


<LI>
<STRONG>UNAME</STRONG> indicates if your system supports the <TT>uname</TT>
command. If you system does not support <TT>uname</TT>, this should be changed
to 0.  You can find out if your system supports <TT>uname</TT> by typing 
<TT>uname -a</TT> at the UNIX prompt.  You should see a line of output
containing the machine name, CPU type, and operating system type and revision.
</LI>

<LI>
<STRONG>DEBUG</STRONG> indicates whether or not to enable debug logging.
If you want to enable the debug log, change this to 1.<BR>
<STRONG>To use the debug logging feature, you must define the global
ofstream <TT>gLogFile</TT>.</STRONG>
</LI>

</OL>

<P>
Once you are finished with the necessary customization, save 
<TT>Makefile</TT> and exit your editor. At the UNIX prompt, type
</P>

<PRE CLASS="unix">
% make install
</PRE>

<P>
You should see output similar to (will vary depending on your configuration):
</P>

<PRE class="unix">
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/Exception.cc -o obj/Exception.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/MStreamable.cc -o obj/MStreamable.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTTPHeaders.cc -o obj/HTTPHeaders.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLAttributes.cc -o obj/HTMLAttributes.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLElements.cc -o obj/HTMLElements.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLDirLang.cc -o obj/HTMLDirLang.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLForms.cc -o obj/HTMLForms.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLFrames.cc -o obj/HTMLFrames.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLGlobal.cc -o obj/HTMLGlobal.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLGraphics.cc -o obj/HTMLGraphics.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLLinks.cc -o obj/HTMLLinks.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLLists.cc -o obj/HTMLLists.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLObjects.cc -o obj/HTMLObjects.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLScripts.cc -o obj/HTMLScripts.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLStyles.cc -o obj/HTMLStyles.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLTables.cc -o obj/HTMLTables.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/HTMLText.cc -o obj/HTMLText.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/CgiDefs.cc -o obj/CgiDefs.o
src/CgiDefs.cc: In function `int findBytes(const char *, int, const char *)':
src/CgiDefs.cc:106: warning: value computed is not used
src/CgiDefs.cc:110: warning: value computed is not used
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/FormEntry.cc -o obj/FormEntry.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/FormFile.cc -o obj/FormFile.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/CgiEnvironment.cc -o obj/CgiEnvironment.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/CgiForm.cc -o obj/CgiForm.o
gcc-2.8.1 -Wall -c -I./include \
-DDEBUG=1 -DADMIN=\"cgicc@foo.com\" -DHAS_UNAME=1 \
src/Cgicc.cc -o obj/Cgicc.o
src/Cgicc.cc: In function `int main(int, char **)':
src/Cgicc.cc:173: warning: value computed is not used
ar rcv ./lib/libCgicc.a ./obj/Exception.o  ./obj/MStreamable.o  ./obj/HTTPHeaders.o  ./obj/HTMLAttributes.o  ./obj/HTMLElements.o  ./obj/HTMLDirLang.o  ./obj/HTMLForms.o  ./obj/HTMLFrames.o  ./obj/HTMLGlobal.o  ./obj/HTMLGraphics.o  ./obj/HTMLLinks.o  ./obj/HTMLLists.o  ./obj/HTMLObjects.o  ./obj/HTMLScripts.o  ./obj/HTMLStyles.o  ./obj/HTMLTables.o  ./obj/HTMLText.o  ./obj/CgiDefs.o  ./obj/FormEntry.o  ./obj/FormFile.o  ./obj/CgiEnvironment.o  ./obj/CgiForm.o  ./obj/Cgicc.o
a - ./obj/Exception.o
a - ./obj/MStreamable.o
a - ./obj/HTTPHeaders.o
a - ./obj/HTMLAttributes.o
a - ./obj/HTMLElements.o
a - ./obj/HTMLDirLang.o
a - ./obj/HTMLForms.o
a - ./obj/HTMLFrames.o
a - ./obj/HTMLGlobal.o
a - ./obj/HTMLGraphics.o
a - ./obj/HTMLLinks.o
a - ./obj/HTMLLists.o
a - ./obj/HTMLObjects.o
a - ./obj/HTMLScripts.o
a - ./obj/HTMLStyles.o
a - ./obj/HTMLTables.o
a - ./obj/HTMLText.o
a - ./obj/CgiDefs.o
a - ./obj/FormEntry.o
a - ./obj/FormFile.o
a - ./obj/CgiEnvironment.o
a - ./obj/CgiForm.o
a - ./obj/Cgicc.o
ar: writing ./lib/libCgicc.a
gcc-2.8.1 -Wall  -I./include \
-DDEBUG=1 -DHAS_UNAME=1 \
-o /home/sbooth/public_html/cgi-bin/test.cgi test.cc \
-L./lib -lCgicc -lstdc++
</PRE>

<P>
Assuming there were no compile errors, open the file <TT>testform.html</TT> in
the <TT>Cgicc</TT> directory.  Scroll down until you see the following line:

<PRE CLASS="html">
&lt;FORM METHOD="POST" ACTION="http://change_this_path/cgi-bin/test.cgi"&gt;
</PRE>

<P>
Change the path to match the <TT>$(CGIDIR)</TT> macro defined in 
<TT>Makefile.</TT> This form will call the <TT>test.cgi</TT> program just 
compiled, and will serve as a test of the compilation. To use 
<TT>testform.html</TT>, move or copy the file to your <TT>public_html</TT> 
directory or equivalent.  Load the form, and have some fun!
</P>

<P>
Incidentally, to see how transparently Cgi<SPAN CLASS="red">cc</SPAN> handles 
the difference between <TT>POST</TT> and <TT>GET</TT> type forms, try 
changing the request method and see what happens.  You won't notice a 
difference except in the call to the application.
</P>

*/