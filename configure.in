dnl $Id: configure.in,v 1.4 1998/12/11 01:46:42 sbooth Exp $

dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/Cgicc.cc)
AM_INIT_AUTOMAKE(Cgicc, 2.2.2)
AM_CONFIG_HEADER(src/config.h)

AC_LANG_CPLUSPLUS

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_INSTALL
AM_PROG_LIBTOOL

dnl Checks for libraries.

dnl setup for networking functions
AC_CHECK_LIB(nsl, gethostbyaddr, LIB_NET="-lnsl")
AC_SUBST(LIB_NET)

dnl check whether to link against libstdc++
AC_CACHE_CHECK(	[whether to link against libstdc++],
		[cgicc_cv_link_libstdcpp],
		[	AC_TRY_LINK([#include <iostream.h>],
				cout << "foo" << endl;,
				cgicc_cv_link_libstdcpp=no,
				cgicc_cv_link_libstdcpp=yes)
		])
if (test "$cgicc_cv_link_libstdcpp" = yes); then 
LIBS="$LIBS -lstdc++"
fi

dnl Checks for header files.
AC_CHECK_HEADERS(sys/time.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_STRUCT_TM

dnl verify exception handling works
AC_CACHE_CHECK(	[for exception handling],
		[cgicc_cv_cpp_exceptions],
		[	AC_TRY_COMPILE(,
				int i=0; try {++i;} catch(...) {--i;},
				cgicc_cv_cpp_exceptions=yes,
				cgicc_cv_cpp_exceptions=no)
		])
if (test "$cgicc_cv_cpp_exceptions" = no); then 
AC_MSG_ERROR([exception handling required])
fi

dnl verify templates work
AC_CACHE_CHECK(	[for template support],
		[cgicc_cv_cpp_templates],
		[	AC_TRY_CPP([template <class T> int foo(T arg);],
				cgicc_cv_cpp_templates=yes,
				cgicc_cv_cpp_templates=no)
		])
if (test "$cgicc_cv_cpp_templates" = no); then 
AC_MSG_ERROR([template support required])
fi

dnl Checks for library functions.
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_FUNCS(strftime gettimeofday uname)

dnl enable/disable the tests, if specified
AC_ARG_ENABLE(tests, 
	[  --enable-tests          build tests],
	[case "${enableval}" in
		yes) tests=true ;;
		no)  tests=false ;;
		*) AC_MSG_ERROR(bad value ${enableval} for --enable-tests) ;;
		esac], 
	tests=true)
AM_CONDITIONAL(TESTS, test "$tests" = true)


AC_OUTPUT([Makefile src/Makefile src/Cgicc.hh test/Makefile doc/Makefile])

