dnl -*-m4-*-
dnl $Id: configure.in,v 1.26 2000/11/02 14:05:18 sbooth Exp $

dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 1.26 $)
AC_INIT(cgicc/Cgicc.cpp)
AC_CONFIG_AUX_DIR(support)
AM_INIT_AUTOMAKE(cgicc, 3.1.4)
AM_CONFIG_HEADER(cgicc/config.h)
AM_MAINTAINER_MODE

AC_LANG_CPLUSPLUS

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_INSTALL
AM_PROG_LIBTOOL

dnl Checks for libraries.

dnl setup for networking functions
AC_CHECK_LIB(nsl, gethostbyaddr, LIB_NET="-lnsl")
AC_SUBST(LIB_NET)

dnl check whether to link against libstdc++
CGICC_CHECK_LINK_STDCPP

dnl Checks for header files.
AC_CHECK_HEADERS(sys/time.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_STRUCT_TM

dnl Determine host system type
AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(HOST, "$host")

dnl verify STL support
CGICC_CHECK_CPP_STL

dnl verify namespace support
CGICC_CHECK_CPP_NAMESPACES

dnl Checks for library functions.
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_FUNCS(strftime gettimeofday uname)

dnl enable/disable compiler warnings (using gcc), if specified
AC_ARG_ENABLE(warnings,
	[  --disable-warnings      disable compiler warnings [default=no]],
	[case "${enableval}" in
		yes) warnings=true ;;
		no)  warnings=false ;;
		*) AC_MSG_ERROR(bad value ${enableval} for --enable-warnings) ;;
		esac], 
	warnings=true)
if (test "$warnings" = true && test "$ac_cv_prog_gcc" = yes); then
	CXXFLAGS="-Wall -W -pedantic $CXXFLAGS"
fi

dnl enable/disable namespaces, if specified
AC_ARG_ENABLE(namespaces,
	[  --enable-namespaces     enable namespace support [default=yes]],
	[case "${enableval}" in
		yes) namespaces=true ;;
		no)  namespaces=false ;;
		*) AC_MSG_ERROR(bad value ${enableval} for --enable-namespaces) ;;
		esac], 
	namespaces=true)
if (test "$namespaces" = true && test "$cgicc_cv_cpp_namespaces" = yes); then
	CGICC_USE_NAMESPACES=1
else
	CGICC_USE_NAMESPACES=0
fi
AC_SUBST(CGICC_USE_NAMESPACES)

dnl enable/disable the demos, if specified
AC_ARG_ENABLE(demos, 
	[  --enable-demos          build demos [default=yes]],
	[case "${enableval}" in
		yes) demos=true ;;
		no)  demos=false ;;
		*) AC_MSG_ERROR(bad value ${enableval} for --enable-demos) ;;
		esac], 
	demos=true)
AM_CONDITIONAL(DEMOS, test "$demos" = true)

AC_OUTPUT([Makefile cgicc/Makefile cgicc/CgiDefs.h info/Makefile demo/Makefile 
	example/Makefile support/Makefile support/cgicc-config])

