dnl -*-m4-*-
dnl $Id: configure.in,v 1.30 2001/03/09 22:37:04 sbooth Exp $

dnl Process this file with autoconf to produce a configure script.
AC_REVISION([$Revision: 1.30 $])
AC_INIT(cgicc/Cgicc.cpp)
AC_CONFIG_AUX_DIR(support)
AM_INIT_AUTOMAKE(cgicc, 3.1.6)
AM_CONFIG_HEADER(cgicc/config.h)
AM_MAINTAINER_MODE

AC_LANG_CPLUSPLUS

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_INSTALL
AM_PROG_LIBTOOL

dnl Checks for libraries.

dnl setup for networking functions
AC_CHECK_LIB(nsl, gethostbyaddr, LIB_NET="-lnsl")
AC_SUBST(LIB_NET)

dnl check whether to link against libstdc++
CGICC_CHECK_LINK_STDCPP

dnl Checks for header files.
AC_CHECK_HEADERS(sys/time.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_STRUCT_TM

dnl Determine host system type
AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(HOST, "$host")

dnl verify STL support
CGICC_CHECK_CPP_STL

dnl verify namespace support
CGICC_CHECK_CPP_NAMESPACES

dnl Checks for library functions.
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_FUNCS(strftime gettimeofday uname)

dnl enable/disable compiler warnings (using gcc), if specified
AC_ARG_ENABLE(warnings,
  [  --disable-warnings      disable gcc warnings [default=no]],
  [case "${enableval}" in
    yes) warnings=yes ;; 
    no)  warnings=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-warnings) ;;
  esac], warnings=yes)
AC_MSG_CHECKING(whether to use gcc verbose warnings)
AC_MSG_RESULT($warnings)
if (test "$warnings" = true && test "$ac_cv_prog_gcc" = yes); then
  CXXFLAGS="-Wall -W -pedantic $CXXFLAGS"
fi

dnl enable/disable namespaces, if specified
AC_ARG_ENABLE(namespaces,
  [  --enable-namespaces     enable namespace support [default=yes]],
  [case "${enableval}" in
    yes) namespaces=yes ;;
    no)  namespaces=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-namespaces) ;;
  esac], namespaces=yes)
AC_MSG_CHECKING(whether to use the cgicc namespace)
AC_MSG_RESULT($namespaces)
if (test "$namespaces" = yes && test "$cgicc_cv_cpp_namespaces" = yes); then
  CGICC_USE_NAMESPACES=1
else
  CGICC_USE_NAMESPACES=0
fi
AC_SUBST(CGICC_USE_NAMESPACES)

dnl enable/disable debug logging, if specified
AC_ARG_ENABLE(debug-logging,
  [  --enable-debug-logging  enable debug logging [default=no]],
  [case "${enableval}" in
    yes) debug=yes ;;
    no)  debug=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug-logging) ;;
  esac], debug=no)
AC_MSG_CHECKING(whether to enable debug logging)
AC_MSG_RESULT($debug)
if test "$debug" = yes; then
  AC_DEFINE(DEBUG,1)
else
  AC_DEFINE(DEBUG,0)
fi

dnl enable/disable the demos, if specified
AC_ARG_ENABLE(demos, 
  [  --enable-demos          build demos [default=yes]],
  [case "${enableval}" in
    yes) demos=yes ;;
    no)  demos=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-demos) ;;
  esac], demos=yes)
AC_MSG_CHECKING(whether to build the cgicc demos)
AC_MSG_RESULT("$demos")
AM_CONDITIONAL(DEMOS, test "$demos" = yes)

AC_OUTPUT([Makefile cgicc/Makefile cgicc/CgiDefs.h info/Makefile demo/Makefile 
  support/Makefile support/cgicc-config])

